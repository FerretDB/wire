---
name: Go
on:
  pull_request:
    types:
      - unlabeled # if GitHub Actions stuck, add and remove "not ready" label to force rebuild
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
  schedule:
    - cron: "12 0 * * *"

env:
  GOPATH: /home/runner/go
  GOCACHE: /home/runner/go/cache
  GOLANGCI_LINT_CACHE: /home/runner/go/cache/lint
  GOMODCACHE: /home/runner/go/mod
  GOPROXY: https://proxy.golang.org
  GOTOOLCHAIN: local

jobs:
  test:
    name: Test ${{ matrix.service }}
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    # Do not run this job in parallel for any PR change or branch push.
    concurrency:
      group: ${{ github.workflow }}-test-${{ matrix.service }}-${{ github.head_ref || github.ref_name }}
      cancel-in-progress: true

    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'not ready')

    strategy:
      fail-fast: false
      matrix:
        include:
          - service: MongoDB
            uri: mongodb://localhost:27017/
          - service: MongoDB with TLS
            uri: mongodb://localhost:37017/?tls=true&tlsCaFile=../.dev/build/certs/rootCA-cert.pem
          - service: FerretDB v2
            uri: mongodb://localhost:27018/
          - service: FerretDB v1
            uri: mongodb://localhost:27019/
            flags: -ferretdbv1

    permissions:
      contents: read

    steps:
      # TODO https://github.com/FerretDB/github-actions/issues/211
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: test

      - name: Install Task and tools
        run: go generate -x
        working-directory: tools

      - name: Init
        run: bin/task init

      - name: Run code generators (and formatters)
        run: bin/task gen

      - name: Run short tests
        run: bin/task test-short

      - name: Start Docker Compose services
        run: bin/task env-up-detach

      - name: Run all tests
        run: bin/task test
        env:
          MONGODB_URI: ${{ matrix.uri }}
          TEST_FLAGS: ${{ matrix.flags }}

      - name: Get logs
        if: always()
        run: bin/task env-logs

      - name: Run linters
        run: bin/task lint

      - name: Upload coverage information to codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: ./cover.txt
          flags: test
          fail_ci_if_error: true
          verbose: true

      - name: Upload coverage information to coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: ./cover.txt
          flag-name: test

      - name: Check dirty
        run: |
          git status
          git diff --exit-code

  fuzz:
    name: Fuzz
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    # Do not run this job in parallel for any PR change or branch push.
    concurrency:
      group: ${{ github.workflow }}-fuzz-${{ github.head_ref || github.ref_name }}
      cancel-in-progress: true

    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'not ready')

    permissions:
      contents: read

    steps:
      # TODO https://github.com/FerretDB/github-actions/issues/211
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: FerretDB/github-actions/setup-go@main
        with:
          cache-key: fuzz

      - name: Install Task and tools
        run: go generate -x
        working-directory: tools

      - name: Run fuzzers
        run: bin/task fuzz
