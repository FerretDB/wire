---
version: 3

env:
  GORACE: halt_on_error=1,history_size=2
  GOCOVERDIR: tmp/cover

vars:
  FUZZ_TIME: 15s

tasks:
  init-tools:
    dir: tools
    cmds:
      - go mod tidy
      - go mod verify
      - go generate -x

  init:
    desc: "Install development tools"
    deps: [init-tools]
    cmds:
      - go mod tidy
      - go mod verify

  env-up-detach:
    cmds:
      - docker version
      - docker compose version
      - >
        docker compose --file=.dev/docker-compose.yml --project-name=wire
        up --always-recreate-deps --force-recreate --remove-orphans --renew-anon-volumes --timeout=0 --detach

  env-logs:
    cmds:
      - docker compose --file=.dev/docker-compose.yml --project-name=wire logs --follow

  env-up:
    desc: "Start development environment"
    deps: [env-up-detach]
    cmds:
      - task: env-logs

  env-down:
    desc: "Stop development environment"
    cmds:
      - docker compose --file=.dev/docker-compose.yml --project-name=wire down --remove-orphans --volumes

  gen:
    desc: "Generate and format"
    cmds:
      - go generate -x ./...
      - task: fmt

  fmt:
    desc: "Format"
    cmds:
      - bin/gofumpt -w .

  test-short:
    desc: "Run short tests"
    cmds:
      - go test -short -race ./...

  test:
    desc: "Run all tests (requires MONGODB_URI set)"
    cmds:
      - go test -race -count=1 ./...
    env:
      MONGODB_URI: mongodb://localhost:27017/

  bench:
    desc: "Run benchmarks"
    cmds:
      - go test -list='Benchmark.*' ./...
      - go test -count=10 -bench=BenchmarkDocument -benchtime=1s ./wirebson | tee -a new.txt
      - bin/benchstat{{exeExt}} old.txt new.txt

  fuzz:
    desc: "Fuzz for about 1 minute (with default FUZZ_TIME)"
    cmds:
      - go test -list='Fuzz.*' ./...
      - go test -run=XXX -fuzz=FuzzDocument -fuzztime={{.FUZZ_TIME}} ./wirebson
      - go test -run=XXX -fuzz=FuzzMsg      -fuzztime={{.FUZZ_TIME}} .
      - go test -run=XXX -fuzz=FuzzQuery    -fuzztime={{.FUZZ_TIME}} .
      - go test -run=XXX -fuzz=FuzzReply    -fuzztime={{.FUZZ_TIME}} .

  godocs:
    desc: "Serve Go code documentation"
    cmds:
      - bin/pkgsite{{exeExt}} -http=127.0.0.1:6060 -open
