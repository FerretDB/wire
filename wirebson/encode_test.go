package wirebson

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestEncodeScalarField(t *testing.T) {
	t.Parallel()

	actual := make([]byte, 13)
	assert.Equal(t, 13, encodeScalarField(actual[0:], "foo", "bar"))

	expected := []byte{0x02, 0x66, 0x6f, 0x6f, 0x0, 0x4, 0x0, 0x0, 0x0, 0x62, 0x61, 0x72, 0x0}
	assert.Equal(t, expected, actual)
}

func TestEncodeField(t *testing.T) {
	t.Parallel()

	var i int
	actual := make([]byte, 22)
	w, err := encodeField(actual[i:], "foo", "bar")
	require.NoError(t, err)

	assert.Equal(t, 13, w)
	i += w

	expected := []byte{0x2, 0x66, 0x6f, 0x6f, 0x0, 0x4, 0x0, 0x0, 0x0, 0x62, 0x61, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
	assert.Equal(t, expected, actual)

	w, err = encodeField(actual[i:], "foo", int32(1))
	require.NoError(t, err)

	assert.Equal(t, 9, w)
	i += w

	expected = []byte{0x2, 0x66, 0x6f, 0x6f, 0x0, 0x4, 0x0, 0x0, 0x0, 0x62, 0x61, 0x72, 0x0, 0x10, 0x66, 0x6f, 0x6f, 0x0, 0x1, 0x0, 0x0, 0x0}
	assert.Equal(t, expected, actual)
}
